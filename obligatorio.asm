; PARAMETROS DE CONFIGURACION DEL SISTEMA
ESTADO equ 120
CANT_CANALES equ 16
MAX_BUFFER equ 8

; CONSTANTES INTERNAS
TIMER_IRQ_BASE equ 8*4
CON equ 0x2
HAB equ 0x1
MEM_BUFFERS equ CANT_CANALES*MAX_BUFFER

.data  

#define DS 0x1000
#define ES 0x0000
#define SS 0x9000

;Reservo memoria para los canales
PP db DUP(CANT_CANALES) ?
PC db DUP(CANT_CANALES) ?
PP_control db DUP(CANT_CANALES) ?
frec_consumo db DUP(CANT_CANALES) ?
tics_rest db DUP(CANT_CANALES) ?
controlAnt db DUP(CANT_CANALES) 0
dondeQuitar db DUP(CANT_CANALES) 0
dondePoner db DUP(CANT_CANALES) 0
cantIngresados db DUP(CANT_CANALES) 0

buffers db DUP(MEM_BUFFERS) ?; el elemento j-esimo del buffer i-esimo comienza en [buffers + i*MAX_BUFFER + j]

.code 
    cli
; Instalo interrupcion del temporizador:
    mov ES:[TIMER_IRQ_BASE], offset timer
    mov ES:[TIMER_IRQ_BASE+2], segment timer

; Variables globales:   SI se usa para iterar sobre los canales
;                       DI cuenta la cantidad de canales configurados en total
; Los dos procedimientos auxiliares reciben en SI y BX a i y MAX_BUFFER*i respectivamente.

    xor SI, SI
; Loop para leer las configuraciones, condiciones de salida: recibo HAB o ya configure CANT_CANALES
while_lectura_canales:
    in AL, ESTADO
    cmp AL, HAB
    je fin_while_lectura_canales
    cmp AL, CON
    jne while_lectura_canales
    in AL, ESTADO
    mov [PP+SI], AL
    in AL, ESTADO
    mov [PP_control + SI], AL
    in AL, ESTADO
    mov [PC + SI], AL
    in AL, ESTADO
    mov [frec_consumo + SI], AL
	mov [tics_rest + SI], AL
    inc SI
	cmp SI, CANT_CANALES
	je fin_while_lectura_canales
    jmp while_lectura_canales
fin_while_lectura_canales:
    mov DI, SI ; guardo cant de canales
    sti

; Pooling para chequear si hay un flanco ascendente en cada PP_control
pooling_produccion:
; for(SI = 0; SI < DI; SI++)
    xor SI, SI
    xor CX, CX
for:
    cmp SI, DI ; si llego al final, vuelvo al inicio
    jnb pooling_produccion
    
    xor DX, DX
    mov DL, [PP_control + SI] ; traigo el puerto de control
    in AL, DX ; traigo el dato de control a AL
    and AL, 0x01 ; tomo el bit menos significativo
    cmp AL, 0x01
    jne end_if_pooling
    cmp byte ptr [controlAnt + SI], 0x00
    jne end_if_pooling
    call producir  
end_if_pooling:
    mov [controlAnt + SI], AL ; guardo el ultimo control leido
    inc SI
    add CX, MAX_BUFFER
    jmp for

producir proc
; Recibo en SI el i del canal a producir y en CX a i*MAX_BUFFER
    push AX
    push DX

    mov DL, [PP + SI] ; traigo el puerto productor
    xor DH, DH 
    in AL, DX ; leo en AL lo del puerto productor
    cmp byte ptr [cantIngresados + SI], MAX_BUFFER; hay lugar en el buffer?
    jb if_producir
else_producir: ; caso overflow
    mov AL, DL
    out ESTADO, AL  
    jmp fin_if_producir

if_producir:
	inc byte ptr [cantIngresados + SI]
	push BX
	xor BX, BX
	mov BL, [dondePoner + SI]
	add BX, CX
	mov [buffers + BX], AL ; escribo el dato en el buffer
	pop BX
; (dondePoner + 1) % MAX_BUFFER
    inc byte ptr [dondePoner + SI]
    cmp byte ptr [dondePoner + SI], MAX_BUFFER
    je if_dondePoner
    jmp fin_if_dondePoner
if_dondePoner: 
    mov byte ptr [dondePoner + SI], 0
fin_if_dondePoner:
fin_if_producir:  

    pop DX
    pop AX
	ret
producir endp

consumir proc
; Recibo en SI el i del canal a consumir y en CX i*MAX_BUFFER
    push DX
    push AX    
  
    cmp byte ptr [cantIngresados + SI],0
    ja if_consumir
else_consumir: ; caso overflow
    mov AL, 0x0
    jmp fin_if_consumir

if_consumir:
    dec byte ptr [cantIngresados + SI]
    push BX
	xor BX, BX
	mov BL, [dondeQuitar + SI]
	add BX, CX
	mov AL, [buffers + BX]
    pop BX
; (dondeQuitar + 1) % MAX_BUFFER
    inc byte ptr [dondeQuitar + SI]
	cmp byte ptr [dondeQuitar + SI], MAX_BUFFER
    je if_dondeQuitar
	jmp fin_if_dondeQuitar
if_dondeQuitar:
    mov byte ptr [dondeQuitar + SI], 0
fin_if_dondeQuitar:

fin_if_consumir:
; resta traer el puerto consumidor y mandar el dato
    mov DL, [PC + SI]
    xor DH, DH
    out DX, AL

    pop AX
    pop DX
    ret
consumir endp

timer proc far
    push SI
    push CX
    push AX

    xor SI, SI
    xor CX, CX
for_timer:
    cmp SI, DI
    jnb end_for_timer
    dec  byte ptr [tics_rest + SI]
    cmp byte ptr [tics_rest + SI], 0 ; toca consumir?
    jne end_if_timer
    call consumir
    mov AL, [frec_consumo + SI]
	mov [tics_rest + SI], AL
end_if_timer:
    inc SI
    add CX, MAX_BUFFER
    jmp for_timer
end_for_timer:
    pop AX
    pop CX
    pop SI
    iret
timer endp

.ports ; Definicion de puertos
120: 2,253,254,255,4,1
253: (0,1000), (1,1000), (0,1000), (2,1000), (0,1000), (3,1000), (0,1000), (4,1000), (0,1000),
(5,1000), (0,1000), (6,1000), (0,1000), (7,1000), (0,1000), (8,1000), (0,1000), (9,1000), (0,1000),
(10,1000), (0,1000), (11,1000), (0,1000), (12,1000), (0,1000), (13,1000), (0,1000), (14,1000),
(0,1000), (15,1000), (0,1000), (16,1000), (0,1000), (17,1000), (0,1000), (18,1000), (0,1000),
(19,1000), (0,1000), (20,1000), (0,1000), (21,1000), (0,1000), (22,1000), (0,1000), (23,1000),
(0,1000), (24,1000), (0,1000), (25,1000), (0,1000), (26,1000), (0,1000), (27,1000), (0,1000),
(28,1000), (0,1000), (29,1000), (0,1000), (30,1000), (0,1000), (31,1000), (0,1000), (32,1000),
(0,1000), (33,1000), (0,1000), (34,1000), (0,1000), (35,1000), (0,1000), (36,1000), (0,1000),
(37,1000), (0,1000), (38,1000), (0,1000), (39,1000), (0,1000), (40,1000), (0,1000), (41,1000),
(0,1000), (42,1000), (0,1000), (43,1000), (0,1000), (44,1000), (0,1000), (45,1000), (0,1000),
(46,1000), (0,1000), (47,1000), (0,1000), (48,1000), (0,1000), (49,1000), (0,1000), (50,1000),
(0,1000), (51,1000), (0,1000), (52,1000), (0,1000), (53,1000), (0,1000), (54,1000), (0,1000),
(55,1000), (0,1000), (56,1000), (0,1000), (57,1000), (0,1000), (58,1000), (0,1000), (59,1000),
(0,1000), (60,1000), (0,1000), (61,1000), (0,1000), (62,1000), (0,1000), (63,1000), (0,1000),
(64,1000), (0,1000), (65,1000), (0,1000), (66,1000), (0,1000), (67,1000), (0,1000), (68,1000),
(0,1000), (69,1000), (0,1000), (70,1000), (0,1000), (71,1000), (0,1000), (72,1000), (0,1000),
(73,1000), (0,1000), (74,1000), (0,1000), (75,1000), (0,1000), (76,1000), (0,1000), (77,1000),
(0,1000), (78,1000), (0,1000), (79,1000), (0,1000), (80,1000), (0,1000), (81,1000), (0,1000),
(82,1000), (0,1000), (83,1000), (0,1000), (84,1000), (0,1000), (85,1000), (0,1000), (86,1000),
(0,1000), (87,1000), (0,1000), (88,1000), (0,1000), (89,1000), (0,1000), (90,1000), (0,1000),
(91,1000), (0,1000), (92,1000), (0,1000), (93,1000), (0,1000), (94,1000), (0,1000), (95,1000),
(0,1000), (96,1000), (0,1000), (97,1000), (0,1000), (98,1000), (0,1000), (99,1000), (0,1000),
(100,1000), (0,1000), (101,1000), (0,1000), (102,1000), (0,1000), (103,1000), (0,1000), (104,1000),
(0,1000), (105,1000), (0,1000), (106,1000), (0,1000), (107,1000), (0,1000), (108,1000), (0,1000),
(109,1000), (0,1000), (110,1000), (0,1000), (111,1000), (0,1000), (112,1000), (0,1000), (113,1000),
(0,1000), (114,1000), (0,1000), (115,1000), (0,1000), (116,1000), (0,1000), (117,1000), (0,1000),
(118,1000), (0,1000), (119,1000), (0,1000), (120,1000), (0,1000), (121,1000), (0,1000), (122,1000),
(0,1000), (123,1000), (0,1000), (124,1000), (0,1000), (125,1000), (0,1000), (126,1000), (0,1000),
(127,1000), (0,1000), (128,1000), (0,1000), (129,1000), (0,1000), (130,1000), (0,1000), (131,1000),
(0,1000), (132,1000), (0,1000), (133,1000), (0,1000), (134,1000), (0,1000), (135,1000), (0,1000),
(136,1000), (0,1000), (137,1000), (0,1000), (138,1000), (0,1000), (139,1000), (0,1000), (140,1000),
(0,1000), (141,1000), (0,1000), (142,1000), (0,1000), (143,1000), (0,1000), (144,1000), (0,1000),
(145,1000), (0,1000), (146,1000), (0,1000), (147,1000), (0,1000), (148,1000), (0,1000), (149,1000),
(0,1000), (150,1000), (0,1000), (151,1000), (0,1000), (152,1000), (0,1000), (153,1000), (0,1000),
(154,1000), (0,1000), (155,1000), (0,1000), (156,1000), (0,1000), (157,1000), (0,1000), (158,1000),
(0,1000), (159,1000), (0,1000), (160,1000), (0,1000), (161,1000), (0,1000), (162,1000), (0,1000),
(163,1000), (0,1000), (164,1000), (0,1000), (165,1000), (0,1000), (166,1000), (0,1000), (167,1000),
(0,1000), (168,1000), (0,1000), (169,1000), (0,1000), (170,1000), (0,1000), (171,1000), (0,1000),
(172,1000), (0,1000), (173,1000), (0,1000), (174,1000), (0,1000), (175,1000), (0,1000), (176,1000),
(0,1000), (177,1000), (0,1000), (178,1000), (0,1000), (179,1000), (0,1000), (180,1000), (0,1000),
(181,1000), (0,1000), (182,1000), (0,1000), (183,1000), (0,1000), (184,1000), (0,1000), (185,1000),
(0,1000), (186,1000), (0,1000), (187,1000), (0,1000), (188,1000), (0,1000), (189,1000), (0,1000),
(190,1000), (0,1000), (191,1000), (0,1000), (192,1000), (0,1000), (193,1000), (0,1000), (194,1000),
(0,1000), (195,1000), (0,1000), (196,1000), (0,1000), (197,1000), (0,1000), (198,1000), (0,1000),
(199,1000), (0,1000), (200,1000), (0,1000), (201,1000), (0,1000), (202,1000), (0,1000), (203,1000),
(0,1000), (204,1000), (0,1000), (205,1000), (0,1000), (206,1000), (0,1000), (207,1000), (0,1000),
(208,1000), (0,1000), (209,1000), (0,1000), (210,1000), (0,1000), (211,1000), (0,1000), (212,1000),
(0,1000), (213,1000), (0,1000), (214,1000), (0,1000), (215,1000), (0,1000), (216,1000), (0,1000),
(217,1000), (0,1000), (218,1000), (0,1000), (219,1000), (0,1000), (220,1000), (0,1000), (221,1000),
(0,1000), (222,1000), (0,1000), (223,1000), (0,1000), (224,1000), (0,1000), (225,1000), (0,1000),
(226,1000), (0,1000), (227,1000), (0,1000), (228,1000), (0,1000), (229,1000), (0,1000), (230,1000),
(0,1000), (231,1000), (0,1000), (232,1000), (0,1000), (233,1000), (0,1000), (234,1000), (0,1000),
(235,1000), (0,1000), (236,1000), (0,1000), (237,1000), (0,1000), (238,1000), (0,1000), (239,1000),
(0,1000), (240,1000), (0,1000), (241,1000), (0,1000), (242,1000), (0,1000), (243,1000), (0,1000),
(244,1000), (0,1000), (245,1000), (0,1000), (246,1000), (0,1000), (247,1000), (0,1000), (248,1000),
(0,1000), (249,1000), (0,1000), (250,1000), (0,1000), (251,1000), (0,1000), (252,1000), (0,1000),
(253,1000), (0,1000), (254,1000), (0,1000), (255,1000), (0,1000), (0,1000), (0,1000), (1,1000),
(0,1000), (2,1000), (0,1000), (3,1000), (0,1000), (4,1000), (0,1000), (5,1000), (0,1000), (6,1000),
(0,1000), (7,1000), (0,1000), (8,1000), (0,1000), (9,1000), (0,1000), (10,1000), (0,1000), (11,1000),
(0,1000), (12,1000), (0,1000), (13,1000), (0,1000), (14,1000), (0,1000), (15,1000), (0,1000),
(16,1000), (0,10000)
254: (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000), (1,1000), (0,1000),
(1,1000), (0,1000), (1,1000), (0,1000), (1,1000)